.table
int c_1
int b_1
int i_1
float a_1
int n_5
int i_6
float n_6
float FL_6[]={0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
int FL_6_size=0
float FL2_6[]={0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
int FL2_6_size=0
int w_6
int a_6
int b_6

.code

teste:
mov $1, i_1
println $1
mov $2, a_1
println $2
mov $3, b_1
println $3
mov $4, c_1
println $4
mov $5, i_1
mov $6, 1
sub $7, $5, $6
not $7, $7
brz IF_ELSE_1, $7
print 'i'
print ' '
print 'e'
print 'h'
print ' '
print '1'
print '\n'
mov $8, i_1
mov $9, 1
add $10, $8, $9
return $10
jump END_IF_ELSE_2
IF_ELSE_1:
mov $1, a_1
mov $2, 0
inttofl $3, $2
sub $4, $1, $3
return $4
END_IF_ELSE_2:
return 0

hello_world:
print 'H'
print 'e'
print 'l'
print 'l'
print 'o'
print ' '
print 'W'
print 'o'
print 'r'
print 'l'
print 'd'
print '!'
print '\n'
return 0

hello_world_n:
print 'H'
print 'e'
print 'l'
print 'l'
print 'o'
print ' '
print 'W'
print 'o'
print 'r'
print 'l'
print 'd'
print ' '
mov $1, n_5
println $1
mov $2, n_5
return $2
return 0

main:
mov $1, 10
mov i_6, $1
mov $2, 3.500000
mov n_6, $2
mov $3, FL_6_size
mov $4, &FL_6
mov $5, 1
inttofl $6, $5
mov $4[$3], $6
add FL_6_size, FL_6_size, 1
add $3, $3, 1
mov $7, 4
mov $8, 2
add $9, $7, $8
mov $10, 1
mov $11, 7.000000
inttofl $12, $10
sub $13, $12, $11
inttofl $14, $9
mul $15, $14, $13
mov $4[$3], $15
add FL_6_size, FL_6_size, 1
add $3, $3, 1
mov $16, FL_6
mov $17, FL2_6_size
mov $18, &FL2_6
mov $19, &FL_6
mov $20, 0
LOOP_WRITE_3:
slt $21, $20, FL_6_size
brz END_WRITE_LOOP_4,  $21
mov $23, $19[$20]
mov $18[$17], $23
add $17, $17, 1
add FL2_6_size, FL2_6_size, 1
add $20, $20, 1
jump LOOP_WRITE_3
END_WRITE_LOOP_4:
mov $24, 7
minus $25, $24
mov w_6, $25
mov $26, w_6
not $27, $26
brz IF_END_4, $27
print 'c'
print 'e'
print 'r'
print 't'
print 'o'
print '.'
print '\n'
IF_END_4:
mov $28, w_6
println $28
call hello_world
mov $29, #0
mov $30, n_6
mov $31, 2
inttofl $32, $31
mul $33, $30, $32
mov $34, 5
inttofl $35, $34
sub $36, $33, $35
push $36
pop $37
fltoint $38, $37
mov n_5, $38
call hello_world_n
mov $39, #0
mov $40, i_6
brz IF_END_6, $40
mov $41, 5
mov i_6, $41
FOR_7:
mov $42, i_6
mov $43, 0
sleq $44, $43, $42
brz FOR_END_8, $44
mov $45, i_6
mov $46, 2
slt $47, $46, $45
brz IF_ELSE_9, $47
print 'a'
print '\n'
jump END_IF_ELSE_10
IF_ELSE_9:
print 'b'
print '\n'
END_IF_ELSE_10:
mov $48, i_6
mov $49, 1
sub $50, $48, $49
mov i_6, $50
jump FOR_7
FOR_END_8:
IF_END_6:
mov $51, 3.500000
mov $52, 2
inttofl $53, $52
add $54, $51, $53
mov $55, 7
inttofl $56, $55
mul $57, $54, $56
mov $58, 4
inttofl $59, $58
div $60, $57, $59
mov $61, 2
inttofl $62, $61
sub $63, $60, $62
fltoint $64, $63
mov a_6, $64
scani b_6
mov $65, a_6
mov $66, b_6
and $67, $65, $66
brz IF_END_12, $67
print 'A'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'B'
print '\n'
mov $68, a_6
println $68
mov $69, b_6
println $69
IF_END_12:
mov $70, a_6
mov $71, b_6
or $72, $70, $71
brz IF_END_14, $72
print 'A'
print ' '
print 'o'
print 'r'
print ' '
print 'B'
print '\n'
print 'a'
print '='
mov $73, a_6
println $73
print 'b'
print '='
mov $74, b_6
println $74
IF_END_14:
mov $75, 0
mov a_6, $75
mov $76, a_6
mov $77, b_6
and $78, $76, $77
brz IF_END_16, $78
print 'A'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'B'
print ','
print ' '
print 'a'
print '='
print '0'
print '\n'
print 'a'
print '='
mov $79, a_6
println $79
print 'b'
print '='
mov $80, b_6
println $80
IF_END_16:
mov $81, a_6
mov $82, b_6
or $83, $81, $82
mov $84, a_6
and $85, $83, $84
brz IF_END_18, $85
print '('
print 'A'
print ' '
print 'o'
print 'r'
print ' '
print 'B'
print ')'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'A'
print ','
print ' '
print 'a'
print '='
print '0'
print '\n'
print 'a'
print '='
mov $86, a_6
println $86
print 'b'
print '='
mov $87, b_6
println $87
IF_END_18:
mov $88, a_6
mov $89, a_6
sub $90, $88, $89
not $90, $90
brz IF_END_20, $90
print '('
print 'A'
print ' '
print '='
print '='
print ' '
print 'A'
print ')'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'A'
print ','
print ' '
print 'a'
print '='
print '0'
print '\n'
print 'a'
print '='
mov $91, a_6
println $91
print 'b'
print '='
mov $92, b_6
println $92
IF_END_20:
mov $93, a_6
mov $94, b_6
sub $95, $93, $94
brz IF_ELSE_22, $95
print '('
print 'A'
print ' '
print '!'
print '='
print ' '
print 'B'
print ')'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'A'
print ','
print ' '
print 'a'
print '='
print '0'
print '\n'
print 'a'
print '='
mov $96, a_6
println $96
print 'b'
print '='
mov $97, b_6
println $97
jump END_IF_ELSE_23
IF_ELSE_22:
print '('
print 'A'
print ' '
print '='
print '='
print ' '
print 'B'
print ')'
print ' '
print 'a'
print 'n'
print 'd'
print ' '
print 'A'
print ','
print ' '
print 'a'
print '='
print '0'
print '\n'
print 'a'
print '='
mov $98, a_6
println $98
print 'b'
print '='
mov $99, b_6
println $99
END_IF_ELSE_23:
mov $100, i_6
push $100
mov $101, a_6
push $101
mov $102, 10
mov $103, 3
div $104, $102, $103
push $104
mov $105, 1
mov $106, 5
sub $107, $105, $106
push $107
pop $108
mov c_1, $108
pop $109
mov b_1, $109
pop $110
inttofl $111, $110
mov a_1, $111
pop $112
mov i_1, $112
call teste
mov $113, #0
mov i_6, $113
print 'R'
print 'e'
print 't'
print 'o'
print 'r'
print 'n'
print 'o'
print ' '
print 'd'
print 'a'
print ' '
print 'f'
print 'u'
print 'n'
print 'c'
print 'a'
print 'o'
print ' '
print 'c'
print 'o'
print 'm'
print ' '
print 'i'
print ' '
print 'e'
print ' '
print 'a'
print ':'
mov $114, i_6
println $114
println 
